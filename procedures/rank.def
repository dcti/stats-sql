use stats
go

drop procedure p_rank
go

create procedure p_rank
(	@section char(1) = null,	/* What section to look at (i.e. e for email, t for team) */
	@contest varchar(10) = null,	/* Contest that we want the ranking on */
	@timeframe char(1) = null,	/* Timeframe we want to look at (overall v. yesterday) */
	@id numeric(7,0) = 0		/* Participant ID to look up */
)
as
begin
	declare @procname	varchar(30)	/* Name of the table to look in */
	declare @rnk		int		/* Rank of participant */

	/* Error checking */

	/* Make sure all the parameters were specified */
	if ( (@section = null) or (@contest = null) or (@timeframe = null) or (@id = 0) )
	begin
		raiserror 99999 "Not enough parameters"
		print "usage:"
		print "	rank section, contest, timeframe, id"
		print "where:"
		print "	section is email or team (i.e. e or t)"
		print "	contest is contest to check rank on"
		print "	timeframe is the ranking to check (i.e. o for overall or y for yesterday)"
		print "	id is the participant ID to check"
		return -5
	end

	/* Process @section */
	select @section = lower(@section)
	if not @section in ("e", "t")
	begin
		raiserror 99999 "Invalid section '%1!' specified, must be 'e' or 't'", @section
		return -5
	end
	
	/* Process @timeframe  */
	select @timeframe = lower(@timeframe)
	if not @timeframe in ("", "o", "y")
	begin
		raiserror 99999 "Invalid timeframe '%1!' specified, must be 'o' or 'y'", @timeframe
		return -5
	end

	/* Build the procedure name */
	select @procname = "p_rank_" + @contest + "_" + @section + "_" + @timeframe + "_rank"
	
	/* See if the silly procedure exists */
	if (object_id(@procname) is NULL)
	begin
		raiserror 99999 "Procedure '%1!' does not exist!", @procname
		return -1
	end

	exec @rnk = @procname @id
	return @rnk
end
go

grant execute on p_rank to public
go

